/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _PRESENTATION_H_
#define _PRESENTATION_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk {
}

#include "document.h"
#include <nepomuk/nepomuk_export.h>

namespace Nepomuk {

/**
 * A Presentation made by some presentation software (Corel Presentations, 
 * OpenOffice Impress, MS Powerpoint etc.) 
 */
    class NEPOMUK_EXPORT Presentation : public Document
    {
    public:
        /**
         * Create a new empty and invalid Presentation instance
         */
        Presentation();
        Presentation( ResourceManager* );
        /**
         * Default copy constructor
         */
        Presentation( const Presentation& );
        Presentation( const Resource& );
        /**
         * Create a new Presentation instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        Presentation( const QString& uriOrIdentifier );
        Presentation( const QString& uriOrIdentifier, ResourceManager* );
        /**
         * Create a new Presentation instance representing the resource
         * referenced by \a uri.
         */
        Presentation( const QUrl& uri );
        Presentation( const QUrl& uri, ResourceManager* );
        ~Presentation();

        Presentation& operator=( const Presentation& );

            /**
             * Retrieve a list of all available Presentation resources. This 
             * list consists of all resource of type Presentation that are 
             * stored in the local Nepomuk meta data storage and any changes 
             * made locally. Be aware that in some cases this list can get very 
             * big. Then it might be better to use libKNep directly. 
             */
            static QList<Presentation> allPresentations();


        /**
         * \return The URI of the resource type that is used in Presentation instances.
         */
        static QString resourceTypeUri();

    protected:
       Presentation( const QString& uri, const QUrl& type );
       Presentation( const QUrl& uri, const QUrl& type );
       Presentation( const QString& uri, const QUrl& type, ResourceManager* );
       Presentation( const QUrl& uri, const QUrl& type, ResourceManager* );
   };
}

#endif
