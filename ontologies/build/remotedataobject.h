/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _REMOTEDATAOBJECT_H_
#define _REMOTEDATAOBJECT_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk {
}

#include "filedataobject.h"
#include <nepomuk/nepomuk_export.h>

namespace Nepomuk {

/**
 * A file data object stored at a remote location. Don't confuse 
 * this class with a RemotePortAddress. This one applies to a particular 
 * resource, RemotePortAddress applies to an address, that can 
 * have various interpretations. 
 */
    class NEPOMUK_EXPORT RemoteDataObject : public FileDataObject
    {
    public:
        /**
         * Create a new empty and invalid RemoteDataObject instance
         */
        RemoteDataObject();
        RemoteDataObject( ResourceManager* );
        /**
         * Default copy constructor
         */
        RemoteDataObject( const RemoteDataObject& );
        RemoteDataObject( const Resource& );
        /**
         * Create a new RemoteDataObject instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        RemoteDataObject( const QString& uriOrIdentifier );
        RemoteDataObject( const QString& uriOrIdentifier, ResourceManager* );
        /**
         * Create a new RemoteDataObject instance representing the resource
         * referenced by \a uri.
         */
        RemoteDataObject( const QUrl& uri );
        RemoteDataObject( const QUrl& uri, ResourceManager* );
        ~RemoteDataObject();

        RemoteDataObject& operator=( const RemoteDataObject& );

            /**
             * Retrieve a list of all available RemoteDataObject resources. 
             * This list consists of all resource of type RemoteDataObject 
             * that are stored in the local Nepomuk meta data storage and any 
             * changes made locally. Be aware that in some cases this list can 
             * get very big. Then it might be better to use libKNep directly. 
             */
            static QList<RemoteDataObject> allRemoteDataObjects();


        /**
         * \return The URI of the resource type that is used in RemoteDataObject instances.
         */
        static QString resourceTypeUri();

    protected:
       RemoteDataObject( const QString& uri, const QUrl& type );
       RemoteDataObject( const QUrl& uri, const QUrl& type );
       RemoteDataObject( const QString& uri, const QUrl& type, ResourceManager* );
       RemoteDataObject( const QUrl& uri, const QUrl& type, ResourceManager* );
   };
}

#endif
